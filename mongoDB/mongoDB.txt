
👉关系型数据库与非关系型数据库区别：
    关系型数据库：由表和表之间的关系组成
                 1.可以用尽量少的空间存储尽量多的数据，因为关系型数据库可以分表 不同的表之间可以有关联eg：用SQL语句在各个表之间做复杂的数据查询
                 2.事务支持：使得对于安全性能很高的数据访问要求得以实现（比如银行）
    非关系型数据库：由集合组成，集合下面是很多的文档
                   1.性能：eg：NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不会经过SQL层的解析，性能非常高
                   2.可扩展性：因为基于键值对，数据之间没有耦合性，容易水平扩展
                   3.文件存储格式为BSON（二进制json，一种json的扩展）

👉mongodb：基于分布式文件存储的数据库

👉配置mongodb
   1.执行命令：1.mongo.exe 连接mongodb数据库服务器
            2.mongod  开启/创建服务器
    2.设置环境变量：将执行目录所在文件设置到环境变量中，方便可以在任意地方使用该命令
    3.创建文件夹存放数据库和操作日志
    4.挂服务

👉mongodb常用操作
   创建数据库：use 数据库名称
   查看数据库：show dbs
   删除数据库：db.dropDatabase()
   删除集合：db.collection.drop()
   插入文档：db.集合名.insert()
   查看文档：db.集合名.find()
   删除文档：db.集合名.remove()
   更新已存在的文档：db.集合名.update()
   通过传入的文档替换已有文档：db.集合名.save()
   创建索引:db.集合名.ensureIndex({key:1}) key值为1升序创建索引 为-1降序创建索引
   聚合函数：db.集合名。aggregate()
   聚合表达式：$sum 计算总和
                    $avg 计算平均值
                    $min 求最小值
                    $max 求最大值
                    $push 在结果文档中 插入一个值到数组中
                    $addToSet 在结果文档中插入一个值到数组中，但不创建副本
                    $first 获取第一个文档
                    $last 获取最后一个文档

👉管道：将当前命令输出结果作为下一个命令的参数
        $project:修改输入文档的结果 可以用来重命名增加或删除域
        $match:过滤数据 只输出符合条件的文档
        $limit:限制mongodb聚合管道返回的文档数
        $skip:跳过指定数量的文档，返回余下文档
        $unwind:将某一数组类型字段拆分为多条，每条包含数字组中的一个值
        $group:分类 用于统计结果
        $sort:排序后输出
        $geoNear:输出接近某一地理位置的有序文档

👉副本集：mongodb至少有两个节点，一个主节点，负责处理客户端请求，一个从节点，负责复制主节点数据
          主节点记录在其上的所有操作oplog，从接待你定期轮询主节点获取这些操作，然后对自己的副本进行这些操作，从而保证主从节点数据一致
👉复制集：MongoDB 在 1.6 版本对开发了新功能replica set，这比之前的replication 功能要强大一 些，增加了故障自动切换和自动修复成员节点，
          各个DB 之间数据完全一致，大大降低了维 护成功。auto shard 已经明确说明不支持replication paris，建议使用replica set，
          replica set 故障切换完全自动。Replica Sets的结构类似一个集群，完全可以把它当成一个集群，因为它确实与集群实现的作用是一样的：
          如果其中一个节点出现故障，其他节点马上会将业务接管过来而无须停机操作 
   
       